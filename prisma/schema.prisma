// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

// User, Role
enum Role {
  USER
  ADMIN
}

model User {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  name              String?
  lastName          String?
  email             String    @unique
  password          String?
  passwordExpiresAt DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  role              Role      @default(USER)
  order             Order[]
}

//Cart, CartItem
model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  productId String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String  @db.ObjectId

  @@map("cartitems")
}

model Cart {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  items    CartItem[]
  order    Order?     @relation(fields: [orderId], references: [id])
  orderId  String?    @db.ObjectId
  sibTotal Float

  @@map("cart")
}

//Order, Delivery
type Delivery {
  phoneNumber     String?
  city            String?
  streetName      String?
  houseNumber     Int?
  additionNumber  String?
  zipCode         String?
  logisticCompany String?
  department      String?
  typeOfDelivery  String?
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      DateTime
  Address   Delivery
  count     Int
  user      User     @relation(fields: [userId], references: [id])
  sum       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  cart      Cart[]
}

// Product, Image
type Image {
  url String
}

type Variant {
  volume         String
  article        String
  stock          Boolean
  image          String
  discount_price Float   @default(0)
  original_price Float   @default(0)
}

model Product {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  linkName       String
  NEW            Boolean
  HIT            Boolean
  name           String
  UTP            String
  description    String
  useTo          String
  image          Image[]
  ingredients    String
  specification  String
  shelfLife      String
  category       String
  variants       Variant[]
  current_rating Float
  cartItem       CartItem[]
  tradeMarkImage String
  min_price      Float?

  @@map("products")
}
